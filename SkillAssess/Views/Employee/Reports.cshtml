@* @model List<SkillAssess.Models.SkillAssessment>



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reports</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        h1, h2 {
            color: #333;
            text-align: center;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .report-item {
            margin-bottom: 20px;
        }

        .report-options {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            margin: 0 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-view {
            background-color: #007bff;
            color: #fff;
        }

        .btn-download {
            background-color: #28a745;
            color: #fff;
        }

        .btn:hover {
            opacity: 0.8;
        }
    </style>
</head>
<body>
    @* <div class="container"> *@

        
   @* <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Employee Dashboard</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="@Url.Action("Index", "Employee")">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("LMSRegistration", "Employee")">LMS Registration</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("SkillAssessment", "Employee")">Skill Assessment</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#Reports">Reports</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Logout", "Employee")">Logout</a>
                </li>
            </ul>
        </div>
    </nav>
        <h1>Reports</h1>

        

      

     @if (Model != null)
    {
        foreach (var assessment in Model)
        {
        <div class="report-item">
            <div class="emp-id">Employee ID: @assessment.EmpID</div>
            <div class="status">Status: @assessment.Status</div>
            <div class="report-options">
                  @* <form asp-controller="Manager" asp-action="ViewReport" method="post">
                    <input type="hidden" name="assessmentId" value="@assessment.AssessmentID" />
                    <button type="submit" class="btn btn-view">View Report</button>
                </form>  
                <a asp-controller="Manager" asp-action="ViewReport" asp-route-assessmentId="@assessment.AssessmentID" class="btn btn-view">View Report</a>
                <a href="@Url.Action("ViewReport", "Manager", new { empid = assessment.EmpID })" class="btn btn-view">View Report</a>
  <a asp-controller="Manager" asp-action="DownloadReport" asp-route-assessmentId="@assessment.AssessmentID" class="btn btn-download">Download Report</a>
            </div>
            </div>
        }
        }
        else
        {
            <p>No Data Available</p>
        }



        
        <div>
        
        <canvas id="technicalSkillsChart" width="400" height="200"></canvas>
    </div>

    <div>
        
        <canvas id="softSkillsChart" width="400" height="200"></canvas>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
    <script>
        var technicalSkillsData = {
            labels: ['Database', 'Programming', 'Java', 'C#', 'Python', 'Web Programming', 'Other Technical'],
            datasets: [{
                label: 'Technical Skills Ratings',
                data: [
                    @foreach(var assessment in Model)
                    {
                         <text>[
        @assessment.DatabaseRating,
        @assessment.ProgrammingRating,
        @assessment.JavaRating,
        @assessment.CSRating,
        @assessment.PythonRating,
        @assessment.WebProgrammingRating,
        @assessment.OtherTechnical,
                    ]</text>
                    }
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 99, 132, 1)'
                ],
                borderWidth: 1
            }]
        };

        var softSkillsData = {
            labels: ['Verbal Communication', 'Written Communication', 'Teamwork', 'Problem Solving', 'Decision Making', 'Leadership', 'Any Foreign Language'],
            datasets: [{
                label: 'Soft Skills Ratings',
                data: [
                    @foreach(var assessment in Model)
                    {
                        <text>[
                    '@assessment.VerbalCommunication',
                    '@assessment.WrittenCommunication',
                    '@assessment.Teamwork',
                    '@assessment.ProblemSolving',
                    '@assessment.DecisionMaking',
                    '@assessment.Leadership',
                    '@assessment.AnyForeignLanguage',
                    ]</text>
                    }
                ],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(255, 99, 132, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(255, 99, 132, 1)'
                ],
                borderWidth: 1
            }]
        };

        var technicalSkillsCtx = document.getElementById('technicalSkillsChart').getContext('2d');
        var technicalSkillsChart = new Chart(technicalSkillsCtx, {
            type: 'bar',
            data: technicalSkillsData,
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var softSkillsCtx = document.getElementById('softSkillsChart').getContext('2d');
        var softSkillsChart = new Chart(softSkillsCtx, {
            type: 'bar',
            data: softSkillsData,
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>

</body>
</html>   *@

@model List<SkillAssess.Models.SkillAssessment>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reports</title>

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

    <style>
        .navbar {
            background-color: #007bff !important; /* Blue background */
            padding: 1rem; /* Consistent size */
        }

        .navbar-brand {
            font-weight: bold;
            color: #ffffff !important; /* White text */
        }

        .navbar-nav .nav-link {
            color: #ffffff !important; /* White text */
        }

        .container-fluid {
            padding-top: 20px;
        }

        section {
            margin-bottom: 30px;
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
        }

        h2 {
            margin-bottom: 20px;
            color: #007bff; /* Blue text */
        }

        h1, h2 {
            color: #007bff; /* Blue color */
            text-align: center;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .report-item {
            margin-bottom: 20px;
        }

        .report-options {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            margin: 0 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .btn-view {
            background-color: #007bff;
            color: #fff;
        }

        .btn-download {
            background-color: #28a745;
            color: #fff;
        }

        .btn:hover {
            opacity: 0.8;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-primary">
        <a class="navbar-brand" href="#">Employee Dashboard</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("Index", "Employee")">Home</a>
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "LMSRegistration" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("LMSRegistration", "Employee")">LMS Registration</a>
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "SkillAssessment" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("SkillAssessment", "Employee")">Skill Assessment</a>
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "Reports" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("Reports", "Employee")">Reports</a>
                </li>
                <li class="nav-item @(ViewContext.RouteData.Values["Controller"].ToString() == "Employee" && ViewContext.RouteData.Values["Action"].ToString() == "Logout" ? "active" : "")">
                    <a class="nav-link" href="@Url.Action("Logout", "Employee")">Logout</a>
                </li>
            </ul>
        </div>
    </nav>

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <section id="reports">
                    <h1>Reports</h1>

                    @if (Model != null && Model.Any())
                    {
                        foreach (var assessment in Model)
                        {
                            <div class="report-item">
                                <div class="emp-id">Employee ID: @assessment.EmpID</div>
                                <div class="status">Status: @assessment.Status</div>
                                <div class="report-options">
                                    <a href="@Url.Action("ViewReport", "Manager", new { empid = assessment.EmpID })" class="btn btn-view">View Report</a>
                                </div>
                            </div>
                        }

                        <div>
                            <canvas id="technicalSkillsChart" width="400" height="200"></canvas>
                        </div>

                        <div>
                            <canvas id="softSkillsChart" width="400" height="200"></canvas>
                        </div>

                        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
                        <script>
                            var technicalSkillsData = {
                                labels: ['Database', 'Programming', 'Java', 'C#', 'Python', 'Web Programming', 'Other Technical'],
                            datasets: [{
                                label: 'Technical Skills Ratings',
                                data: [
                                    @foreach(var assessment in Model)
                                    {
                                        <text>[
                                            @assessment.DatabaseRating,
                                            @assessment.ProgrammingRating,
                                            @assessment.JavaRating,
                                            @assessment.CSRating,
                                            @assessment.PythonRating,
                                            @assessment.WebProgrammingRating,
                                            @assessment.OtherTechnical,
                                        ]</text>
                                    }
                                ],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(255, 159, 64, 0.2)',
                                    'rgba(255, 99, 132, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)',
                                    'rgba(255, 99, 132, 1)'
                                ],
                                borderWidth: 1
                            }]
                            };

                            var softSkillsData = {
                                labels: ['Verbal Communication', 'Written Communication', 'Teamwork', 'Problem Solving', 'Decision Making', 'Leadership', 'Any Foreign Language'],
                            datasets: [{
                                label: 'Soft Skills Ratings',
                                data: [
                                    @foreach(var assessment in Model)
                                    {
                                        <text>[
                                            '@assessment.VerbalCommunication',
                                            '@assessment.WrittenCommunication',
                                            '@assessment.Teamwork',
                                            '@assessment.ProblemSolving',
                                            '@assessment.DecisionMaking',
                                            '@assessment.Leadership',
                                            '@assessment.AnyForeignLanguage',
                                        ]</text>
                                    }
                                ],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                    'rgba(54, 162, 235, 0.2)',
                                    'rgba(255, 206, 86, 0.2)',
                                    'rgba(75, 192, 192, 0.2)',
                                    'rgba(153, 102, 255, 0.2)',
                                    'rgba(255, 159, 64, 0.2)',
                                    'rgba(255, 99, 132, 0.2)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)',
                                    'rgba(255, 99, 132, 1)'
                                ],
                                borderWidth: 1
                            }]
                            };

                            var technicalSkillsChart = new Chart(document.getElementById('technicalSkillsChart').getContext('2d'), {
                                type: 'bar',
                                data: technicalSkillsData,
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });

                            var softSkillsChart = new Chart(document.getElementById('softSkillsChart').getContext('2d'), {
                                type: 'bar',
                                data: softSkillsData,
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    }
                                }
                            });

                           function downloadReport(empId) {
            // Convert the charts to images
            var technicalSkillsImage = technicalSkillsChart.toBase64Image();
            var softSkillsImage = softSkillsChart.toBase64Image();

            // Create a payload
            var payload = {
                empId: empId,
                technicalSkillsImage: technicalSkillsImage,
                softSkillsImage: softSkillsImage
            };

            // Send the images and other data to the server
            fetch('/Employee/DownloadReport', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
            })
            .then(response => response.blob())
            .then(blob => {
                var url = window.URL.createObjectURL(blob);
                var a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = 'SkillAssessmentReport.docx';
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
            })
            .catch(error => console.error('Error:', error));
        }
                        </script>
                    }
                    else
                    {
                        <div class="alert alert-info" role="alert">
                            No reports available.
                        </div>
                    }
                </section>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>